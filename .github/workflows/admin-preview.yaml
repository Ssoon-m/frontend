name: Vercel Admin Preview

env:
  CACHED_DEPENDENCY_PATHS: "**/node_modules"
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}
# TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
# TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]
    paths:
      - apps/admin/**
      - packages/**
      - turbo.json
      - .npmrc
      - .nvmrc
      - "*.config.js"
      - .github/workflows/admin-preview.yml

jobs:
  Install-Dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - name: Compute dependencies hash key
        id: compute_lockfile_hash
        run: echo "::set-output name=key::${{ hashFiles('**/yarn.lock') }}"

      - name: Restore node_modules cache
        id: restore_dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ steps.compute_lockfile_hash.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ env.cache-name }}-
            ${{ runner.os }}-modules-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.restore_dependencies.outputs.cache-hit != 'true'
        run: yarn install

    outputs:
      dependency_cache_key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ steps.compute_lockfile_hash.outputs.key }}

  Build-Prj:
    name: Build
    needs: Install-Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - name: Check dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.Install-Dependencies.outputs.dependency_cache_key }}

      - name: Install dependencies
        if: steps.restore_dependencies.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn build --filter=admin...

      - name: Lint
        run: yarn lint

  Admin-Deploy-Preview:
    needs: [Install-Dependencies, Build-Prj]
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --debug --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
